{"version":3,"sources":["node_modules/wicked-elements/esm/3rd/regular-elements/poorly/event.js","node_modules/wicked-elements/esm/3rd/regular-elements/poorly/weakset.js","node_modules/wicked-elements/esm/3rd/regular-elements/poorly/assign.js","node_modules/wicked-elements/esm/3rd/regular-elements/poly/contains.js","node_modules/wicked-elements/esm/3rd/regular-elements/poly/matches.js","node_modules/wicked-elements/esm/3rd/regular-elements/3rd/attributechanged.js","node_modules/wicked-elements/esm/3rd/regular-elements/3rd/disconnected.js","node_modules/wicked-elements/esm/3rd/regular-elements/index.js","node_modules/wicked-elements/esm/index.js","../src/lib/directive.ts","../src/lib/dom.ts","../src/lib/part.ts","../src/lib/template.ts","../src/lib/template-instance.ts","../src/lib/template-result.ts","../src/lib/parts.ts","../src/lib/default-template-processor.ts","../src/lib/template-factory.ts","../src/lib/render.ts","src/lit-html.ts","src/util/debounce-render.js","src/util/with-props.js","src/util/page-visibility.js","src/util/index.js","src/util/audio.js","src/components/wicked-tec1.js","src/components/seven-seg-display.js","src/components/seven-seg.js","src/components/instructions.js","src/components/key-button.js","src/components/keypad-classic.js","src/components/keypad-modern.js","src/app.js","src/index-ie.js"],"names":["$Event","Event","o_O","CustomEvent","type","e","document","createEvent","initEvent","$WeakSet","WeakSet","constructor","WeakMap","$","prototype","add","O","set","has","delete","i","Math","random","join","Object","defineProperty","value","configurable","hasOwnProperty","call","assign","target","o","arguments","length","k","contains","el","parentNode","indexOf","matches","documentElement","selector","matchesSelector","webkitMatchesSelector","khtmlMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","fallback","querySelectorAll","attributechanged","poly","node","attributeFilter","options","attributes","attributeOldValue","filtered","Array","slice","MutationObserver","changes","observe","handleEvent","attrModified","addEventListener","event","dispatchEvent","attrName","prevValue","attributeName","oldValue","newValue","getAttribute","records","record","disconnected","CONNECTED","DISCONNECTED","notObserving","observer","startObserving","dispatched","subtree","childList","timer","reschedule","push","clearTimeout","setTimeout","splice","addedNodes","removedNodes","Tracker","dispatchAll","nodes","counter","nodeType","dispatchTarget","children","ownerDocument","bootstrap","query","config","waiting","known","regularElements","define","init","Error","ready","setupListeners","get","whenDefined","Promise","resolve","lifecycle","connected","setupList","doc","readyState","once","setup","ws","css","isElement","setupListener","dispatch","method","ATTRIBUTE_FILTER","ONDISCONNECTED","ONATTRIBUTECHANGED","create","wickedElements","component","definition","onconnected","currentTarget","removeEventListener","addIfNeeded","key","handler","invoke","debounceRender","object","requested","renderFunc","render","element","requestAnimationFrame","withProps","def","def2","oldInit","requestRender","observeProperties","props","observedProperties","prop","hasProp","initValue","propertyChanged","isHidden","addVisibilityListener","removeVisiblityListener","msHidden","webkitHidden","hidden","visibilityChange","func","audioValue","isAudioPlaying","audioInit","audioPlay","audioToggle","AudioContext","window","webkitAudioContext","audioCtx","source1","active","stop","createOscillator","frequency","connect","destination","start","setValueAtTime","currentTime","state","suspend","resume","audioPause","keyMap","Digit0","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","KeyA","KeyB","KeyC","KeyD","KeyE","KeyF","Space","Tab","Enter","Minus","ArrowDown","ArrowUp","wickedTec1","digits","segments","display","fill","handleVisibility","bind","handleKeyDown","classic","localStorage","getItem","speed","worker","Worker","onmessage","view","Uint8Array","data","buffer","wavelength","postMessage","postSpeed","ondisconnected","terminate","console","log","handleButton","code","shiftKey","ctrlKey","preventDefault","keyCode","port","html","tec1Image","detail","checked","setItem","String","sevenSegDisplay","display0","blanks","map","segs","index","sevenSeg","instructions","keyButton","text","color","left","top","style","keyPadClassic","keyPadModern","initApp"],"mappings":"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","file":"index-ie.b9a34ef9.map","sourceRoot":"..","sourcesContent":["/**\n * ISC License\n *\n * Copyright (c) 2018, Andrea Giammarchi, @WebReflection\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n * PERFORMANCE OF THIS SOFTWARE.\n */\n\nvar $Event;\n\ntry {\n  new Event('!');\n  $Event = Event;\n} catch(o_O) {\n  try {\n    new CustomEvent('!');\n    $Event = CustomEvent;\n  } catch(o_O) {\n    $Event = function (type) {\n      var e = document.createEvent('Event');\n      e.initEvent(type, false, false);\n      return e;\n    };\n  }\n}\n\nexport default $Event;\n","/**\n * ISC License\n *\n * Copyright (c) 2018, Andrea Giammarchi, @WebReflection\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n * PERFORMANCE OF THIS SOFTWARE.\n */\n\nvar $WeakSet;\n\ntry {\n  $WeakSet = (new WeakSet).constructor;\n} catch(o_O) {\n  try {\n    // IE11 apparently has WeakMap but no WeakSet\n    o_O = ($WeakSet = new WeakMap && function () {\n      this.$ = new WeakMap;\n    }).prototype;\n    o_O.add = function (O) {\n      this.$.set(O, 0);\n      return this;\n    };\n    o_O.has = function (O) {\n      return this.$.has(O);\n    };\n    o_O.delete = function (O) {\n      return this.$.delete(O);\n    };\n  } catch(o_O) {\n    // all other browsers\n    var i = 0;\n    o_O = ($WeakSet = function () {\n      this.$ = ['__', Math.random(), i++, '__'].join('ws');\n    }).prototype;\n    o_O.add = function (O) {\n      if (!this.has(O))\n        Object.defineProperty(O, this.$, {value:true, configurable:true});\n      return this;\n    };\n    o_O.has = function (O) {\n      return this.hasOwnProperty.call(O, this.$);\n    };\n    o_O.delete = function (O) {\n      return delete O[this.$];\n    };\n  }\n}\n\nexport default $WeakSet;\n","/**\n * ISC License\n *\n * Copyright (c) 2018, Andrea Giammarchi, @WebReflection\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n * PERFORMANCE OF THIS SOFTWARE.\n */\n\nexport default Object.assign || function (target) {\n  for (var o, i = 1; i < arguments.length; i++) {\n    o = arguments[i] || {};\n    for (var k in o) {\n      if (o.hasOwnProperty(k))\n        target[k] = o[k];\n    }\n  }\n  return target;\n};\n","// borrowed from https://github.com/WebReflection/dom4/blob/master/src/dom4.js#L361\nvar contains = document.contains || function (el) {\n  while (el && el !== this) el = el.parentNode;\n  return this === el;\n};\n\nexport default contains;\n","var indexOf = [].indexOf;\n\n// borrowed from https://github.com/WebReflection/dom4/blob/master/src/dom4.js#L130\nvar matches = 'matches' in document.documentElement ?\n  function (el, selector) {\n    return el.matches(selector);\n  } :\n  function (el, selector) {\n    return (\n      el.matchesSelector ||\n      el.webkitMatchesSelector ||\n      el.khtmlMatchesSelector ||\n      el.mozMatchesSelector ||\n      el.msMatchesSelector ||\n      el.oMatchesSelector ||\n      fallback\n    ).call(el, selector);\n  };\n\nexport default matches;\n\nfunction fallback(selector) {\n  var parentNode = this.parentNode;\n  return !!parentNode && -1 < indexOf.call(\n    parentNode.querySelectorAll(selector),\n    this\n  );\n}\n","/*! (c) Andrea Giammarchi */\nfunction attributechanged(poly) {'use strict';\n  var Event = poly.Event;\n  return function observe(node, attributeFilter) {\n    var options = {attributes: true, attributeOldValue: true};\n    var filtered = attributeFilter instanceof Array && attributeFilter.length;\n    if (filtered)\n      options.attributeFilter = attributeFilter.slice(0);\n    try {\n      (new MutationObserver(changes)).observe(node, options);\n    } catch(o_O) {\n      options.handleEvent = filtered ? handleEvent : attrModified;\n      node.addEventListener('DOMAttrModified', options, true);\n    }\n    return node;\n  };\n  function attrModified(event) {\n    dispatchEvent(event.target, event.attrName, event.prevValue);\n  }\n  function dispatchEvent(node, attributeName, oldValue) {\n    var event = new Event('attributechanged');\n    event.attributeName = attributeName;\n    event.oldValue = oldValue;\n    event.newValue = node.getAttribute(attributeName);\n    node.dispatchEvent(event);\n  }\n  function changes(records) {\n    for (var record, i = 0, length = records.length; i < length; i++) {\n      record = records[i];\n      dispatchEvent(record.target, record.attributeName, record.oldValue);\n    }\n  }\n  function handleEvent(event) {\n    if (-1 < this.attributeFilter.indexOf(event.attrName))\n      attrModified(event);\n  }\n}\nexport default attributechanged;\n","/*! (c) Andrea Giammarchi */\nfunction disconnected(poly) {'use strict';\n  var CONNECTED = 'connected';\n  var DISCONNECTED = 'dis' + CONNECTED;\n  var Event = poly.Event;\n  var WeakSet = poly.WeakSet;\n  var notObserving = true;\n  var observer = new WeakSet;\n  return function observe(node) {\n    if (notObserving) {\n      notObserving = !notObserving;\n      startObserving(node.ownerDocument);\n    }\n    observer.add(node);\n    return node;\n  };\n  function startObserving(document) {\n    var dispatched = null;\n    try {\n      (new MutationObserver(changes)).observe(\n        document,\n        {subtree: true, childList: true}\n      );\n    }\n    catch(o_O) {\n      var timer = 0;\n      var records = [];\n      var reschedule = function (record) {\n        records.push(record);\n        clearTimeout(timer);\n        timer = setTimeout(\n          function () {\n            changes(records.splice(timer = 0, records.length));\n          },\n          0\n        );\n      };\n      document.addEventListener(\n        'DOMNodeRemoved',\n        function (event) {\n          reschedule({addedNodes: [], removedNodes: [event.target]});\n        },\n        true\n      );\n      document.addEventListener(\n        'DOMNodeInserted',\n        function (event) {\n          reschedule({addedNodes: [event.target], removedNodes: []});\n        },\n        true\n      );\n    }\n    function changes(records) {\n      dispatched = new Tracker;\n      for (var\n        record,\n        length = records.length,\n        i = 0; i < length; i++\n      ) {\n        record = records[i];\n        dispatchAll(record.removedNodes, DISCONNECTED, CONNECTED);\n        dispatchAll(record.addedNodes, CONNECTED, DISCONNECTED);\n      }\n      dispatched = null;\n    }\n    function dispatchAll(nodes, type, counter) {\n      for (var\n        node,\n        event = new Event(type),\n        length = nodes.length,\n        i = 0; i < length;\n        (node = nodes[i++]).nodeType === 1 &&\n        dispatchTarget(node, event, type, counter)\n      );\n    }\n    function dispatchTarget(node, event, type, counter) {\n      if (observer.has(node) && !dispatched[type].has(node)) {\n        dispatched[counter].delete(node);\n        dispatched[type].add(node);\n        node.dispatchEvent(event);\n        /*\n        // The event is not bubbling (perf reason: should it?),\n        // hence there's no way to know if\n        // stop/Immediate/Propagation() was called.\n        // Should DOM Level 0 work at all?\n        // I say it's a YAGNI case for the time being,\n        // and easy to implement in user-land.\n        if (!event.cancelBubble) {\n          var fn = node['on' + type];\n          if (fn)\n            fn.call(node, event);\n        }\n        */\n      }\n      for (var\n        children = node.children,\n        length = children.length,\n        i = 0; i < length;\n        dispatchTarget(children[i++], event, type, counter)\n      );\n    }\n    function Tracker() {\n      this[CONNECTED] = new WeakSet;\n      this[DISCONNECTED] = new WeakSet;\n    }\n  }\n}\nexport default disconnected;\n","/**\n * ISC License\n *\n * Copyright (c) 2018, Andrea Giammarchi, @WebReflection\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n * PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport Event from './poorly/event.js';\nimport WeakSet from './poorly/weakset.js';\nimport assign from './poorly/assign.js';\n\nimport contains from './poly/contains.js';\nimport matches from './poly/matches.js';\n\nimport attributechanged from './3rd/attributechanged.js';\nimport disconnected from './3rd/disconnected.js';\n\nvar bootstrap = true;\n\nvar query = [];\nvar config = [];\nvar waiting = {};\nvar known = {};\n\nvar regularElements = {\n  Event: Event,\n  WeakSet: WeakSet,\n  assign: assign,\n  document: document,\n  define: function (selector, options) {\n    if (bootstrap) {\n      bootstrap = false;\n      init(regularElements.document);\n    }\n    var type = typeof selector;\n    if (type === 'string') {\n      if (-1 < query.indexOf(selector))\n        throw new Error('duplicated: ' + selector);\n      query.push(selector);\n      config.push(options || {});\n      ready();\n      if (selector in waiting) {\n        waiting[selector](config[config.length - 1]);\n        delete waiting[selector];\n      }\n    } else {\n      if (type !== \"object\" || selector.nodeType !== 1)\n        throw new Error('undefinable: ' + selector);\n      setupListeners(selector, options || {});\n    }\n  },\n  get: function (selector) {\n    var i = query.indexOf(selector);\n    return i < 0 ? null : assign({}, config[i]);\n  },\n  whenDefined: function (selector) {\n    return Promise.resolve(\n      regularElements.get(selector) ||\n      new Promise(function ($) {\n        waiting[selector] = $;\n      })\n    );\n  }\n};\n\n// passing along regularElements as poly for Event and WeakSet\nvar lifecycle = disconnected(regularElements);\nvar observe = {\n  attributechanged: attributechanged(regularElements),\n  connected: lifecycle,\n  disconnected: lifecycle\n};\n\nexport default regularElements;\nexport {regularElements, assign, Event, WeakSet};\n\nfunction changes(records) {\n  for (var i = 0, length = records.length; i < length; i++)\n    setupList(records[i].addedNodes, false);\n}\n\nfunction init(doc) {\n  try {\n    (new MutationObserver(changes))\n      .observe(doc, {subtree: true, childList: true});\n  }\n  catch(o_O) {\n    doc.addEventListener(\n      'DOMNodeInserted',\n      function (e) {\n        changes([{addedNodes: [e.target]}]);\n      },\n      false\n    );\n  }\n  if (doc.readyState !== 'complete')\n    doc.addEventListener('DOMContentLoaded', ready, {once: true});\n}\n\nfunction ready() {\n  if (query.length)\n    setupList(regularElements.document.querySelectorAll(query), true);\n}\n\nfunction setup(node) {\n  setupList(node.querySelectorAll(query), true);\n  for (var ws, css, i = 0, length = query.length; i < length; i++) {\n    css = query[i];\n    ws = known[css] || (known[css] = new WeakSet);\n    if (!ws.has(node) && matches(node, query[i])) {\n      ws.add(node);\n      setupListeners(node, config[i]);\n    }\n  }\n}\n\nfunction setupList(nodes, isElement) {\n  for (var node, i = 0, length = nodes.length; i < length; i++) {\n    node = nodes[i];\n    if (isElement || node.nodeType === 1)\n      setup(node);\n  }\n}\n\nfunction setupListener(node, options, type, dispatch) {\n  var method = options['on' + type];\n  if (method) {\n    observe[type](node, options.attributeFilter)\n      .addEventListener(type, method, false);\n    if (dispatch && contains.call(regularElements.document, node))\n      node.dispatchEvent(new Event(type));\n  }\n}\n\nfunction setupListeners(node, options) {\n  setupListener(node, options, 'attributechanged', false);\n  setupListener(node, options, 'disconnected', false);\n  setupListener(node, options, 'connected', true);\n}\n","/**\n * ISC License\n *\n * Copyright (c) 2018, Andrea Giammarchi, @WebReflection\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n * PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport regularElements, {WeakSet} from './3rd/regular-elements/index.js';\n\n// minifier friendly constants\nvar ATTRIBUTE_FILTER = 'attributeFilter';\nvar ONDISCONNECTED = 'ondisconnected';\nvar ONATTRIBUTECHANGED = 'onattributechanged';\n\n// one off scoped shortcut\nvar create = Object.create;\n\n// get() and whenDefined() are just the same\n// NOTE: the component is not returned,\n//       only its initial definition.\n//       This works well in terms of security\n//       so that a component prototype won't be\n//       exposed directly through the API.\nvar wickedElements = create(regularElements, {\n  define: {\n    value: function (selector, component) {\n      var ws = new WeakSet;\n      var definition = {onconnected: setup};\n      if (ONDISCONNECTED in component)\n        definition[ONDISCONNECTED] = setup;\n      if (ONATTRIBUTECHANGED in component) {\n        definition[ONATTRIBUTECHANGED] = setup;\n        definition[ATTRIBUTE_FILTER] = component[ATTRIBUTE_FILTER] || [];\n      }\n      addIfNeeded(component, 'init', init);\n      addIfNeeded(component, 'handleEvent', handleEvent);\n      regularElements.define(selector, definition);\n      function setup(event) {\n        var el = event.currentTarget;\n        var type = event.type;\n        el.removeEventListener(type, setup);\n        if (!ws.has(el)) {\n          ws.add(el);\n          bootstrap(component, event, el, 'on' + type);\n        }\n      }\n    }\n  }\n});\n\nexport default wickedElements;\n\nfunction addIfNeeded(component, key, value) {\n  if (!(key in component))\n    component[key] = value;\n}\n\nfunction bootstrap(component, event, el, method) {\n  var handler = create(component);\n  var invoke = false;\n  for (var key in component) {\n    if (key.slice(0, 2) === 'on') {\n      el.addEventListener(key.slice(2), handler, false);\n      if (key === method)\n        invoke = !invoke;\n    }\n  }\n  handler.init(event);\n  if (invoke)\n    handler.handleEvent(event);\n}\n\nfunction handleEvent(event) {\n  var type = 'on' + event.type;\n  if (type in this)\n    this[type](event);\n}\n\nfunction init(event) {\n  this.el = event.currentTarget;\n}\n","\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<any, Boolean>();\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive so that lit-html will call the function\n * during template rendering, rather than passing as a value.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object\n *\n * @example\n *\n * ```\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n * ```\n */\nexport const directive = <F extends Function>(f: F): F =>\n    ((...args: any[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as unknown as F;\n\nexport const isDirective = (o: any) =>\n    typeof o === 'function' && directives.has(o);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nexport const isCEPolyfill = window.customElements !== undefined &&\n    (window.customElements as any).polyfillWrapFlushCallback !== undefined;\n\n/**\n * Reparents nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), into another container (could be the same container), before\n * `beforeNode`. If `beforeNode` is null, it appends the nodes to the\n * container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      let node = start;\n      while (node !== end) {\n        const n = node!.nextSibling;\n        container.insertBefore(node!, before as Node);\n        node = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), from `container`.\n */\nexport const removeNodes =\n    (container: Node, startNode: Node|null, endNode: Node|null = null):\n        void => {\n          let node = startNode;\n          while (node !== endNode) {\n            const n = node!.nextSibling;\n            container.removeChild(node!);\n            node = n;\n          }\n        };\n","/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  value: any;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: any): void;\n\n  /**\n   * Commits the current part value, cause it to actually be written to the DOM.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  parts: TemplatePart[] = [];\n  element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n    let index = -1;\n    let partIndex = 0;\n    const nodesToRemove: Node[] = [];\n    const _prepareTemplate = (template: HTMLTemplateElement) => {\n      const content = template.content;\n      // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n      // null\n      const walker = document.createTreeWalker(\n          content,\n          133 /* NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT |\n                 NodeFilter.SHOW_TEXT */\n          ,\n          null as any,\n          false);\n      // The actual previous node, accounting for removals: if a node is removed\n      // it will never be the previousNode.\n      let previousNode: Node|undefined;\n      // Used to set previousNode at the top of the loop.\n      let currentNode: Node|undefined;\n      while (walker.nextNode()) {\n        index++;\n        previousNode = currentNode;\n        const node = currentNode = walker.currentNode as Element;\n        if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n          if (node.hasAttributes()) {\n            const attributes = node.attributes;\n            // Per\n            // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n            // attributes are not guaranteed to be returned in document order.\n            // In particular, Edge/IE can return them out of order, so we cannot\n            // assume a correspondance between part index and attribute index.\n            let count = 0;\n            for (let i = 0; i < attributes.length; i++) {\n              if (attributes[i].value.indexOf(marker) >= 0) {\n                count++;\n              }\n            }\n            while (count-- > 0) {\n              // Get the template literal section leading up to the first\n              // expression in this attribute\n              const stringForPart = result.strings[partIndex];\n              // Find the attribute name\n              const name = lastAttributeNameRegex.exec(stringForPart)![2];\n              // Find the corresponding attribute\n              // All bound attributes have had a suffix added in\n              // TemplateResult#getHTML to opt out of special attribute\n              // handling. To look up the attribute value we also need to add\n              // the suffix.\n              const attributeLookupName =\n                  name.toLowerCase() + boundAttributeSuffix;\n              const attributeValue = node.getAttribute(attributeLookupName)!;\n              const strings = attributeValue.split(markerRegex);\n              this.parts.push({type: 'attribute', index, name, strings});\n              node.removeAttribute(attributeLookupName);\n              partIndex += strings.length - 1;\n            }\n          }\n          if (node.tagName === 'TEMPLATE') {\n            _prepareTemplate(node as HTMLTemplateElement);\n          }\n        } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n          const nodeValue = node.nodeValue!;\n          if (nodeValue.indexOf(marker) < 0) {\n            continue;\n          }\n          const parent = node.parentNode!;\n          const strings = nodeValue.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // We have a part for each match found\n          partIndex += lastIndex;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            parent.insertBefore(\n                (strings[i] === '') ? createMarker() :\n                                      document.createTextNode(strings[i]),\n                node);\n            this.parts.push({type: 'node', index: index++});\n          }\n          parent.insertBefore(\n              strings[lastIndex] === '' ?\n                  createMarker() :\n                  document.createTextNode(strings[lastIndex]),\n              node);\n          nodesToRemove.push(node);\n        } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n          if (node.nodeValue === marker) {\n            const parent = node.parentNode!;\n            // Add a new marker node to be the startNode of the Part if any of\n            // the following are true:\n            //  * We don't have a previousSibling\n            //  * previousSibling is being removed (thus it's not the\n            //    `previousNode`)\n            //  * previousSibling is not a Text node\n            //\n            // TODO(justinfagnani): We should be able to use the previousNode\n            // here as the marker node and reduce the number of extra nodes we\n            // add to a template. See\n            // https://github.com/PolymerLabs/lit-html/issues/147\n            const previousSibling = node.previousSibling;\n            if (previousSibling === null || previousSibling !== previousNode ||\n                previousSibling.nodeType !== Node.TEXT_NODE) {\n              parent.insertBefore(createMarker(), node);\n            } else {\n              index--;\n            }\n            this.parts.push({type: 'node', index: index++});\n            nodesToRemove.push(node);\n            // If we don't have a nextSibling add a marker node.\n            // We don't have to check if the next node is going to be removed,\n            // because that node will induce a new marker if so.\n            if (node.nextSibling === null) {\n              parent.insertBefore(createMarker(), node);\n            } else {\n              index--;\n            }\n            currentNode = previousNode;\n            partIndex++;\n          } else {\n            let i = -1;\n            while ((i = node.nodeValue!.indexOf(marker, i + 1)) !== -1) {\n              // Comment node has a binding marker inside, make an inactive part\n              // The binding won't work, but subsequent bindings will\n              // TODO (justinfagnani): consider whether it's even worth it to\n              // make bindings in comments work\n              this.parts.push({type: 'node', index: -1});\n            }\n          }\n        }\n      }\n    };\n    _prepareTemplate(element);\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  type: 'node',\n  index: number\n}|{type: 'attribute', index: number, name: string, strings: string[]};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#attributes-0\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-character\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \\x09\\x0a\\x0c\\x0d\"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  _parts: Array<Part|undefined> = [];\n  processor: TemplateProcessor;\n  options: RenderOptions;\n  template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: any[]) {\n    let i = 0;\n    for (const part of this._parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this._parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // When using the Custom Elements polyfill, clone the node, rather than\n    // importing it, to keep the fragment in the template's document. This\n    // leaves the fragment inert so custom elements won't upgrade and\n    // potentially modify their contents by creating a polyfilled ShadowRoot\n    // while we traverse the tree.\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const parts = this.template.parts;\n    let partIndex = 0;\n    let nodeIndex = 0;\n    const _prepareInstance = (fragment: DocumentFragment) => {\n      // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n      // null\n      const walker = document.createTreeWalker(\n          fragment,\n          133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n          null as any,\n          false);\n      let node = walker.nextNode();\n      // Loop through all the nodes and parts of a template\n      while (partIndex < parts.length && node !== null) {\n        const part = parts[partIndex];\n        // Consecutive Parts may have the same node index, in the case of\n        // multiple bound attributes on an element. So each iteration we either\n        // increment the nodeIndex, if we aren't on a node with a part, or the\n        // partIndex if we are. By not incrementing the nodeIndex when we find a\n        // part, we allow for the next part to be associated with the current\n        // node if neccessasry.\n        if (!isTemplatePartActive(part)) {\n          this._parts.push(undefined);\n          partIndex++;\n        } else if (nodeIndex === part.index) {\n          if (part.type === 'node') {\n            const part = this.processor.handleTextExpression(this.options);\n            part.insertAfterNode(node);\n            this._parts.push(part);\n          } else {\n            this._parts.push(...this.processor.handleAttributeExpressions(\n                node as Element, part.name, part.strings, this.options));\n          }\n          partIndex++;\n        } else {\n          nodeIndex++;\n          if (node.nodeName === 'TEMPLATE') {\n            _prepareInstance((node as HTMLTemplateElement).content);\n          }\n          node = walker.nextNode();\n        }\n      }\n    };\n    _prepareInstance(fragment);\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  strings: TemplateStringsArray;\n  values: any[];\n  type: string;\n  processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: any[], type: string,\n      processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const endIndex = this.strings.length - 1;\n    let html = '';\n    for (let i = 0; i < endIndex; i++) {\n      const s = this.strings[i];\n      // This replace() call does two things:\n      // 1) Appends a suffix to all bound attribute names to opt out of special\n      // attribute value parsing that IE11 and Edge do, like for style and\n      // many SVG attributes. The Template class also appends the same suffix\n      // when looking up attributes to creat Parts.\n      // 2) Adds an unquoted-attribute-safe marker for the first expression in\n      // an attribute. Subsequent attribute expressions will use node markers,\n      // and this is safe since attributes with multiple expressions are\n      // guaranteed to be quoted.\n      let addedMarker = false;\n      html += s.replace(\n          lastAttributeNameRegex, (_match, whitespace, name, value) => {\n            addedMarker = true;\n            return whitespace + name + boundAttributeSuffix + value + marker;\n          });\n      if (!addedMarker) {\n        html += nodeMarker;\n      }\n    }\n    return html + this.strings[endIndex];\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    template.innerHTML = this.getHTML();\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTMl in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\nexport const isPrimitive = (value: any) =>\n    (value === null ||\n     !(typeof value === 'object' || typeof value === 'function'));\n\n/**\n * Sets attribute values for AttributeParts, so that the value is only set once\n * even if there are multiple parts for an attribute.\n */\nexport class AttributeCommitter {\n  element: Element;\n  name: string;\n  strings: string[];\n  parts: AttributePart[];\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: string[]) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      this.parts[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): any {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = this.parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (v != null &&\n            (Array.isArray(v) || typeof v !== 'string' && v[Symbol.iterator])) {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        } else {\n          text += typeof v === 'string' ? v : String(v);\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue());\n    }\n  }\n}\n\nexport class AttributePart implements Part {\n  committer: AttributeCommitter;\n  value: any = undefined;\n\n  constructor(comitter: AttributeCommitter) {\n    this.committer = comitter;\n  }\n\n  setValue(value: any): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\nexport class NodePart implements Part {\n  options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: any = undefined;\n  _pendingValue: any = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Inserts this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part between `ref` and `ref`'s next sibling. Both `ref` and\n   * its next sibling must be static, unchanging nodes such as those that appear\n   * in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part._insert(this.startNode = createMarker());\n    part._insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Appends this part after `ref`\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref._insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: any): void {\n    this._pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this._pendingValue)) {\n      const directive = this._pendingValue;\n      this._pendingValue = noChange;\n      directive(this);\n    }\n    const value = this._pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this._commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this._commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this._commitNode(value);\n    } else if (Array.isArray(value) || value[Symbol.iterator]) {\n      this._commitIterable(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private _commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this._insert(value);\n    this.value = value;\n  }\n\n  private _commitText(value: string): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === Node.TEXT_NODE) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      node.textContent = value;\n    } else {\n      this._commitNode(document.createTextNode(\n          typeof value === 'string' ? value : String(value)));\n    }\n    this.value = value;\n  }\n\n  private _commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value && this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this._commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private _commitIterable(value: any): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart!.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  element: Element;\n  name: string;\n  strings: string[];\n  value: any = undefined;\n  _pendingValue: any = undefined;\n\n  constructor(element: Element, name: string, strings: string[]) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: any): void {\n    this._pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this._pendingValue)) {\n      const directive = this._pendingValue;\n      this._pendingValue = noChange;\n      directive(this);\n    }\n    if (this._pendingValue === noChange) {\n      return;\n    }\n    const value = !!this._pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n    }\n    this.value = value;\n    this._pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  single: boolean;\n\n  constructor(element: Element, name: string, strings: string[]) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\ntry {\n  const options = {\n    get capture() {\n      eventOptionsSupported = true;\n      return false;\n    }\n  };\n  window.addEventListener('test', options as any, options);\n  window.removeEventListener('test', options as any, options);\n} catch (_e) {\n}\n\nexport class EventPart implements Part {\n  element: Element;\n  eventName: string;\n  eventContext?: EventTarget;\n  value: any = undefined;\n  _options?: AddEventListenerOptions;\n  _pendingValue: any = undefined;\n  _boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this._boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: any): void {\n    this._pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this._pendingValue)) {\n      const directive = this._pendingValue;\n      this._pendingValue = noChange;\n      directive(this);\n    }\n    if (this._pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this._pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this._boundHandleEvent, this._options);\n    }\n    if (shouldAddListener) {\n      this._options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this._boundHandleEvent, this._options);\n    }\n    this.value = newListener;\n    this._pendingValue = noChange;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      this.value.handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: any) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): Part[] {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const comitter = new PropertyCommitter(element, name.slice(1), strings);\n      return comitter.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const comitter = new AttributeCommitter(element, name, strings);\n    return comitter.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behaviour, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport type templateCache = {\n  stringsArray: WeakMap<TemplateStringsArray, Template>;\n  keyString: Map<string, Template>;\n};\n\nexport const templateCaches = new Map<string, templateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\nimport {TemplateResult} from './template-result.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result a TemplateResult created by evaluating a template tag like\n *     `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: TemplateResult,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: any[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: any[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","import {html, render} from 'lit-html';\n\nexport function debounceRender(object) {\n  let requested = false;\n  const renderFunc = () => {\n    requested = false;\n    render(object.render(object), object.element);\n  };\n  return () => {\n    if (requested) return;\n    requested = true;\n    requestAnimationFrame(renderFunc);\n  }\n}\n","import { debounceRender } from './debounce-render';\n\nexport function withProps(def) {\n\n  const def2 = Object.create(def);\n  const oldInit = def2.init;\n  def2.init = function (event) {\n\n    this.element = event.currentTarget;\n    this.requestRender = debounceRender(this);\n\n    if (oldInit) {\n      oldInit.call(this, event);\n    }\n    else {\n      this.requestRender();\n    }\n    observeProperties(this, event);\n  }\n  return def2;\n};\n\nfunction observeProperties(object) {\n\n  const props = object.observedProperties;\n  if (!props || !props.length) {\n    object.requestRender();\n    return;\n  };\n\n  const element = object.element;\n  for (let prop of props) {\n\n    // if the component already has a property of this\n    // name then save it for later\n    const hasProp = element.hasOwnProperty(prop)\n    let initValue;\n    if (hasProp) {\n      initValue = element[prop];\n      delete element[prop];\n    }\n\n    // define getters and setters for this property name\n    Object.defineProperty(element, prop, {\n\n      get() {\n        return object[prop]\n      },\n\n      set(value) {\n        const oldValue = object[prop];\n        object[prop] = value;\n        if (oldValue !== value && object.propertyChanged) {\n          object.propertyChanged(\n            prop, value, oldValue\n          );\n        }\n        object.requestRender();\n      }\n    });\n\n    // if we saved an old property value earlier\n    // reassign it to the component\n\n    if (hasProp) {\n      element[prop] = initValue;\n    }\n  }\n}\n","let [hidden, visibilityChange] = (typeof document.msHidden !== 'undefined') ?\n  ['msHidden', 'msvisibilitychange'] : (typeof document.webkitHidden !== 'undefined') ?\n    ['webkitHidden', 'webkitvisibilitychange'] : ['hidden', 'visibilitychange'];\n\nexport function isHidden() {\n  return document[hidden];\n}\n\nexport function addVisibilityListener(func) {\n  document.addEventListener(visibilityChange, func, false);\n}\n\nexport function removeVisiblityListener(func) {\n  document.removeEventListener(visibilityChange, func, false);\n}\n","export { withProps } from './with-props';\nexport { debounceRender } from './debounce-render';\nexport { isHidden, addVisibilityListener, removeVisiblityListener} from './page-visibility';","var AudioContext = window.AudioContext // Default\n    || window.webkitAudioContext // Safari and old versions of Chrome\n    || false;\n\nlet audioCtx;\nlet source1;\nlet active = false;\n\nfunction init() {\n    audioCtx = new AudioContext();\n    if (source1) source1.stop();\n    source1 = audioCtx.createOscillator();\n    source1.type = 'square';\n    source1.frequency.value = 440;\n    source1.connect(audioCtx.destination);\n    source1.start();\n}\n\nexport function audioValue(value) {\n    if (value != null && active) {\n        source1.frequency.setValueAtTime(value, audioCtx.currentTime);\n    }\n}\n\nexport function isAudioPlaying() {\n    return active;\n}\n\nexport function audioInit() {\n    if (!audioCtx) {\n        init();\n    }\n    active = true;\n}\n\nexport function audioPlay(state) {\n    if (!audioCtx) {\n        init();\n    }\n    if (active === state) return;\n    if (active) {\n        audioCtx.suspend();\n        active = false;\n    }\n    else {\n        audioCtx.resume();\n        active = true;\n    }\n}\n\nexport function audioToggle() {\n    if (active)\n        audioPause();\n    else\n        audioPlay();\n}","import { html } from 'lit-html'\nimport { withProps, isHidden, addVisibilityListener, removeVisiblityListener } from '../util';\nimport tec1Image from '../assets/TEC-1.jpg';\nimport {audioInit, audioPlay, audioValue} from '../util/audio';\n\nconst keyMap = {\n    Digit0: 0x00, Digit1: 0x01, Digit2: 0x02, Digit3: 0x03,\n    Digit4: 0x04, Digit5: 0x05, Digit6: 0x06, Digit7: 0x07,\n    Digit8: 0x08, Digit9: 0x09,\n    KeyA: 0x0A, KeyB: 0x0B, KeyC: 0x0C, KeyD: 0x0D,\n    KeyE: 0x0E, KeyF: 0x0F,\n    Space: 0x13, Tab: 0x13,\n    Enter: 0x12, Minus: 0x11,\n    ArrowDown: 0x11, ArrowUp: 0x10,\n};\n\nexport const wickedTec1 = withProps({\n\n    init: function (event) {\n        this.digits = 0;\n        this.segments = 0;\n        this.display = Array(6).fill(0);\n        this.handleVisibility = this.handleVisibility.bind(this);\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.classic = localStorage.getItem('classic') === 'true';\n        this.speed = localStorage.getItem('speed');\n    },\n\n    onconnected(event) {\n        this.worker = new Worker('../worker/worker.js');\n        this.worker.onmessage = event => {\n            let view = new Uint8Array(event.data.buffer);\n            this.digits = view[1];\n            this.segments = view[2];\n            this.requestRender();\n            this.display = [...new Uint8Array(event.data.display)];\n            this.wavelength = event.data.wavelength;\n            this.frequency = this.wavelength ? 500000/this.wavelength : 0;\n            audioValue(this.frequency);\n        }\n        this.worker.postMessage({ type: 'INIT' });\n        this.postSpeed(this.speed);\n        document.addEventListener(\"keydown\", this.handleKeyDown);\n        addVisibilityListener(this.handleVisibility);\n    },\n\n    ondisconnected(event) {\n        this.worker.terminate();\n        document.removeEventListener(\"keydown\", this.handleKeyDown);\n        removeVisiblityListener(this.handleVisibility);\n    },\n\n    handleVisibility() {\n        console.log('isHidden', isHidden());\n        audioPlay(!isHidden());\n        this.worker.postMessage({ type: 'HIDDEN', value: isHidden() });\n    },\n\n    handleKeyDown(event) {\n\n        if (this.handleButton(event.code, event.shiftKey, event.ctrlKey)) {\n            event.preventDefault();\n        }\n        else {\n            console.log(event, event.code, event.key);\n        }\n    },\n\n    handleButton(code, shiftKey, ctrlKey) {\n        audioInit();\n        if (code === 'Escape') {\n            this.worker.postMessage({ type: 'RESET' });\n            return true;\n        }\n        if (code === 'Space') {\n            this.worker.postMessage({ type: 'PAUSE' });\n            return true;\n        }\n        else if (code in keyMap) {\n            let keyCode = keyMap[code];\n            if (shiftKey) {\n                keyCode = keyCode | 0x80;\n            }\n            this.worker.postMessage({ type: 'SET_INPUT_VALUE', port: 0, value: keyCode });\n            this.worker.postMessage({ type: 'NMI' });\n            return true;\n        }\n    },\n\n    postSpeed(speed) {\n        this.worker.postMessage({ type: 'SET_SPEED', value: speed });\n    },\n\n    render({ digits, segments, display, wavelength, frequency }) {\n        return html`\n<style>\n    body {\n        font-family: sans-serif;\n    }\n    #tec1 {\n        width: 600px;\n        height: 375px;\n        background-image: url(${tec1Image});\n        background-size: 100% 100%;\n        position: relative;\n    }\n\n    #digitPane {\n        direction: rtl;\n        padding: 0px 20px;\n        position: relative;\n        top: 74.4%;\n        right: 42.5%;\n    }\n\n    .off {\n        fill: #320000;\n    }\n\n    .on {\n        fill: red;\n    }\n\n    [is=key-button] {\n        height: 0px;\n    }\n\n    [is=key-button] {\n        position: absolute;\n        background-color: #cd3d45;\n        color: black;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        font-family: sans-serif;\n        font-size: 13px;\n        font-weight: bold;\n        width: 20px;\n        height: 20px;\n        border-radius: 10px;\n        left: 438px;\n        top: 301px;\n    }\n</style>\n<div style=\"display:inline-block\">\n    <div id=\"tec1\">\n        ${  this.classic ?\n            html`<div is=\"keypad-classic\" @click=${(event) => this.handleButton(event.detail.code)}></div>` :\n            html`<div is=\"keypad-modern\" @click=${(event) => this.handleButton(event.detail.code)}></div>`\n        }\n        <div is=\"key-button\" .text=${ 'R'}  .color=${ '#cd3d45'} .left=${349} .top=${301} @click=${() => this.handleButton('Escape')}></div>\n\n        <div id=\"digitPane\">\n            <div id=\"seven\" is=\"seven-seg-display\" .digits=${digits} .segments=${segments} .display=${display}></div>\n        </div>\n    </div>\n    <div style=\"display:flex; justify-content:space-between;\">\n        <div>\n            <input type=\"checkbox\"\n                ?checked=${this.classic}\n                @change=${event => {\n                    this.classic = event.target.checked;\n                    localStorage.setItem('classic', String(this.classic))\n                }}\n                >original key layout\n        </div>\n        <div>\n            Speed\n            <input\n                type=\"range\"\n                min=\"0\"\n                max=\"99\"\n                value=${this.speed || \"50\"}\n                @change=${event => {\n                    this.speed = event.target.value;\n                    localStorage.setItem('speed', String(this.speed))\n                    this.worker.postMessage({ type: 'SET_SPEED', value: this.speed });\n                    this.postSpeed(this.speed);\n                }}\n                >\n        </div>\n    </div>\n    <p>MON 1 Restarts:</p>\n    <div style=\"display:flex; justify-content:space-between\">\n        <div>\n            <div>C7 (RST 0)\tRESET</div>\n            <div>CF (RST 1)\tINVADERS</div>\n            <div>D7 (RST 2)\tNIM</div>\n            <div>DF (RST 3)\tLUNALANDER</div>\n        </div>\n        <div>\n            <div>E7 (RST 4)\t-</div>\n            <div>EF (RST 5)\tTUNE 1 Biking down the Strand</div>\n            <div>F7 (RST 6)\tTUNE 2 Bealach An Doirín</div>\n            <div>FF (RST 7)\tWELCOME MESSAGE</div>\n        </div>\n    </div>\n</div>\n<!-- <div is=\"instructions\" style=\"margin-left: 35px\"></div> -->\n`;\n    },\n});\n","import { html } from 'lit-html'\nimport { withProps } from '../util';\n\nexport const sevenSegDisplay = withProps({\n\n    init(event) {\n        this.display0 = Array(6).fill(0);\n        this.display = [...this.display0];\n        this.blanks = 0\n    },\n\n    get observedProperties() {\n        return ['digits', 'segments', 'display'];\n    },\n\n    render({ digits, segments, display }) {\n        return html`\n<div style=\"white-space: nowrap;\">${display.map((segs, index) => html`\n<span is=\"seven-seg\" style=${index == 1 ? 'margin-left:2.2%' : ''} .segments=${segs}>\n</div>`)}</span>\n`;\n    },\n\n});\n","import { html } from 'lit-html'\nimport { withProps } from '../util';\n\nexport const sevenSeg = withProps({\n\n    get observedProperties() {\n        return ['segments'];\n    },\n\n    render({ segments }) {\n        return html`\n            <div style=\"display:inline-block;width:4.35%;margin-left:1.7%;\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -1 12 20\">\n                    <g class=\"digit\">\n                        <polygon id=\"a\" class=${segments & 0x01 ? 'on' : 'off'} points=\" 1, 1  2, 0  8, 0  9, 1  8, 2  2, 2\" />\n                        <polygon id=\"b\" class=${segments & 0x08 ? 'on' : 'off'} points=\" 9, 1 10, 2 10, 8  9, 9  8, 8  8, 2\" />\n                        <polygon id=\"c\" class=${segments & 0x20 ? 'on' : 'off'} points=\" 9, 9 10,10 10,16  9,17  8,16  8,10\" />\n                        <polygon id=\"d\" class=${segments & 0x80 ? 'on' : 'off'} points=\" 9,17  8,18  2,18  1,17  2,16  8,16\" />\n                        <polygon id=\"e\" class=${segments & 0x40 ? 'on' : 'off'} points=\" 1,17  0,16  0,10  1, 9  2,10  2,16\" />\n                        <polygon id=\"f\" class=${segments & 0x02 ? 'on' : 'off'} points=\" 1, 9  0, 8  0, 2  1, 1  2, 2  2, 8\" />\n                        <polygon id=\"g\" class=${segments & 0x04 ? 'on' : 'off'} points=\" 1, 9  2, 8  8, 8  9, 9  8,10  2,10\" />\n                        <circle class=${segments & 0x10 ? 'on' : 'off'} cx=\"11\" cy=\"17\" r=\"1\" />\n                    </g>\n                </svg>\n            </div>\n        `;\n    },\n});\n","import { html } from 'lit-html'\nimport { withProps } from '../util';\n\nexport const instructions = withProps({\n\n    render({ segments }) {\n        return html`\n        <h1>TEC-1</h1>\n        <table style=\"width: 600px\">\n            <tbody>\n                <tr style=\"text-align: left;\">\n                    <th>Key</th>\n                    <th>Description</th>\n                    <th>TEC-1</th>\n                </tr>\n                <tr>\n                    <td>0-9,A-F</td>\n                    <td>Hex digits</td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>ESC</td>\n                    <td>Reset</td>\n                    <td>(RES)</td>\n                </tr>\n                <tr>\n                    <td>tab</td>\n                    <td>Mode</td>\n                    <td>(AD)</td>\n                </tr>\n                <tr>\n                    <td>Enter</td>\n                    <td>Run</td>\n                    <td>(GO)</td>\n                </tr>\n                <tr>\n                    <td>Arrow Up</td>\n                    <td>Increase</td>\n                    <td>(+)</td>\n                </tr>\n                <tr>\n                    <td>Arrow Down</td>\n                    <td>Decrease</td>\n                    <td>(-)</td>\n                </tr>\n                <tr>\n                    <td>Space</td>\n                    <td>Pause/Resume</td>\n                    <td></td>\n                </tr>\n            </tbody>\n        </table>\n`;\n    }\n});\n","import { html } from 'lit-html'\nimport { withProps } from '../util';\n\nexport const keyButton = withProps({\n\n    get observedProperties() {\n        return ['text','color','left','top'];\n    },\n\n    render({ text, color, left, top }) {\n        this.element.style = `background-color:${color};left:${left}px;top:${top}px`;\n        return html`\n            ${text}\n        `;\n    },\n});\n","import { html } from 'lit-html'\nimport { withProps } from '../util';\n\nexport const keyPadClassic = withProps({\n\n    handleButton(code) {\n        const event = new CustomEvent('click', {\n            detail: {\n                code: code,\n            },\n        });\n        this.element.dispatchEvent(event);\n    },\n\n    render() {\n        return html`\n<div is=\"key-button\" .text=${ 'AD'} .color=${ '#cd3d45'} .left=${438} .top=${239} @click=${() => this.handleButton('Tab')}></div>\n<div is=\"key-button\" .text=${ '3'} .color=${ '#efedeb'} .left=${468} .top=${239} @click=${() => this.handleButton('Digit3')}></div>\n<div is=\"key-button\" .text=${ '7'}  .color=${ '#efedeb'} .left=${500} .top=${239} @click=${() => this.handleButton('Digit7')}></div>\n<div is=\"key-button\" .text=${ 'B'} .color=${ '#efedeb'} .left=${531} .top=${239} @click=${() => this.handleButton('KeyB')}></div>\n<div is=\"key-button\" .text=${ 'F'} .color=${ '#efedeb'} .left=${562} .top=${239} @click=${() => this.handleButton('KeyF')}></div>\n\n<div is=\"key-button\" .text=${ 'GO'} .color=${ '#cd3d45'} .left=${438} .top=${270} @click=${() => this.handleButton('Enter')}></div>\n<div is=\"key-button\" .text=${ '2'} .color=${ '#efedeb'} .left=${468} .top=${270} @click=${() => this.handleButton('Digit2')}></div>\n<div is=\"key-button\" .text=${ '6'} .color=${ '#efedeb'} .left=${500} .top=${270} @click=${() => this.handleButton('Digit6')}></div>\n<div is=\"key-button\" .text=${ 'A'} .color=${ '#efedeb'} .left=${531} .top=${270} @click=${() => this.handleButton('KeyA')}></div>\n<div is=\"key-button\" .text=${ 'E'} .color=${ '#efedeb'} .left=${562} .top=${270} @click=${() => this.handleButton('KeyE')}></div>\n\n<div is=\"key-button\" .text=${ '-'}  .color=${ '#cd3d45'} .left=${438} .top=${301} @click=${() => this.handleButton('ArrowDown')}></div>\n<div is=\"key-button\" .text=${ '1'} .color=${ '#efedeb'} .left=${468} .top=${301} @click=${() => this.handleButton('Digit1')}></div>\n<div is=\"key-button\" .text=${ '5'} .color=${ '#efedeb'} .left=${500} .top=${301} @click=${() => this.handleButton('Digit5')}></div>\n<div is=\"key-button\" .text=${ '9'} .color=${ '#efedeb'} .left=${531} .top=${301} @click=${() => this.handleButton('Digit9')}></div>\n<div is=\"key-button\" .text=${ 'D'} .color=${ '#efedeb'} .left=${562} .top=${301} @click=${() => this.handleButton('KeyD')}></div>\n\n<div is=\"key-button\" .text=${ '+'}  .color=${ '#cd3d45'} .left=${438} .top=${331} @click=${() => this.handleButton('ArrowUp')}></div>\n<div is=\"key-button\" .text=${ '0'} .color=${ '#efedeb'} .left=${468} .top=${331} @click=${() => this.handleButton('Digit0')}></div>\n<div is=\"key-button\" .text=${ '4'} .color=${ '#efedeb'} .left=${500} .top=${332} @click=${() => this.handleButton('Digit4')}></div>\n<div is=\"key-button\" .text=${ '8'} .color=${ '#efedeb'} .left=${531} .top=${332} @click=${() => this.handleButton('Digit8')}></div>\n<div is=\"key-button\" .text=${ 'C'} .color=${ '#efedeb'} .left=${562} .top=${332} @click=${() => this.handleButton('KeyC')}></div>\n        `;\n    },\n});\n","import { html } from 'lit-html'\nimport { withProps } from '../util';\nexport const keyPadModern = withProps({\n\n    handleButton(code) {\n        const event = new CustomEvent('click', {\n            detail: {\n                code: code,\n            },\n        });\n        this.element.dispatchEvent(event);\n    },\n\n    render() {\n        return html`\n<div is=\"key-button\" .text=${ 'AD'} .color=${ '#cd3d45'} .left=${438} .top=${239} @click=${() => this.handleButton('Tab')}></div>\n<div is=\"key-button\" .text=${ 'C'} .color=${ '#efedeb'} .left=${468} .top=${239} @click=${() => this.handleButton('KeyC')}></div>\n<div is=\"key-button\" .text=${ 'D'}  .color=${ '#efedeb'} .left=${500} .top=${239} @click=${() => this.handleButton('KeyD')}></div>\n<div is=\"key-button\" .text=${ 'E'} .color=${ '#efedeb'} .left=${531} .top=${239} @click=${() => this.handleButton('KeyE')}></div>\n<div is=\"key-button\" .text=${ 'F'} .color=${ '#efedeb'} .left=${562} .top=${239} @click=${() => this.handleButton('KeyF')}></div>\n\n<div is=\"key-button\" .text=${ 'GO'} .color=${ '#cd3d45'} .left=${438} .top=${270} @click=${() => this.handleButton('Enter')}></div>\n<div is=\"key-button\" .text=${ '8'} .color=${ '#efedeb'} .left=${468} .top=${270} @click=${() => this.handleButton('Digit8')}></div>\n<div is=\"key-button\" .text=${ '9'} .color=${ '#efedeb'} .left=${500} .top=${270} @click=${() => this.handleButton('Digit9')}></div>\n<div is=\"key-button\" .text=${ 'A'} .color=${ '#efedeb'} .left=${531} .top=${270} @click=${() => this.handleButton('KeyA')}></div>\n<div is=\"key-button\" .text=${ 'B'} .color=${ '#efedeb'} .left=${562} .top=${270} @click=${() => this.handleButton('KeyB')}></div>\n\n<div is=\"key-button\" .text=${ '+'}  .color=${ '#cd3d45'} .left=${438} .top=${301} @click=${() => this.handleButton('ArrowUp')}></div>\n<div is=\"key-button\" .text=${ '4'} .color=${ '#efedeb'} .left=${468} .top=${301} @click=${() => this.handleButton('Digit4')}></div>\n<div is=\"key-button\" .text=${ '5'} .color=${ '#efedeb'} .left=${500} .top=${301} @click=${() => this.handleButton('Digit5')}></div>\n<div is=\"key-button\" .text=${ '6'} .color=${ '#efedeb'} .left=${531} .top=${301} @click=${() => this.handleButton('Digit6')}></div>\n<div is=\"key-button\" .text=${ '7'} .color=${ '#efedeb'} .left=${562} .top=${301} @click=${() => this.handleButton('Digit7')}></div>\n\n<div is=\"key-button\" .text=${ '-'}  .color=${ '#cd3d45'} .left=${438} .top=${331} @click=${() => this.handleButton('ArrowDown')}></div>\n<div is=\"key-button\" .text=${ '0'} .color=${ '#efedeb'} .left=${468} .top=${331} @click=${() => this.handleButton('Digit0')}></div>\n<div is=\"key-button\" .text=${ '1'} .color=${ '#efedeb'} .left=${500} .top=${332} @click=${() => this.handleButton('Digit1')}></div>\n<div is=\"key-button\" .text=${ '2'} .color=${ '#efedeb'} .left=${531} .top=${332} @click=${() => this.handleButton('Digit2')}></div>\n<div is=\"key-button\" .text=${ '3'} .color=${ '#efedeb'} .left=${562} .top=${332} @click=${() => this.handleButton('Digit3')}></div>\n        `;\n    },\n});\n","import wickedElements from 'wicked-elements';\n\nimport { wickedTec1 } from './components/wicked-tec1';\nimport { sevenSegDisplay } from './components/seven-seg-display';\nimport { sevenSeg } from './components/seven-seg';\nimport { instructions } from './components/instructions';\nimport { keyButton } from './components/key-button';\nimport { keyPadClassic } from './components/keypad-classic';\nimport { keyPadModern } from './components/keypad-modern';\n\nexport function initApp() {\n    wickedElements.define('[is=\"wicked-tec1\"]', wickedTec1);\n    wickedElements.define('[is=\"seven-seg-display\"]', sevenSegDisplay);\n    wickedElements.define('[is=\"seven-seg\"]', sevenSeg);\n    wickedElements.define('[is=\"instructions\"]', instructions);\n    wickedElements.define('[is=\"key-button\"]', keyButton);\n    wickedElements.define('[is=\"keypad-classic\"]', keyPadClassic);\n    wickedElements.define('[is=\"keypad-modern\"]', keyPadModern);\n}\n","import {initApp} from './app';\n\ninitApp();\n"]}