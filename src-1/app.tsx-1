import * as React from 'react';

import { ThemeProvider, createGlobalStyle } from 'styled-components';
import { AnyObj } from './types';

const GlobalStyle = createGlobalStyle
`
html, body {
  height: 100%;
}

body {
  margin: 0;
  padding: 0;
  font-family: sans-serif;
}

#root {
  display: flex;
  flex-direction: column;
  height: 100%;
  position: relative;
}
`;

const customTheme = (theme: AnyObj) => ({
});

export const App: React.FC<any> = () => {
  return (
    <>
      <GlobalStyle />
      <ThemeProvider theme={customTheme}>
      <div style={display:'inline-block'}>
        <div style="display:flex; justify-content:space-between; align-items: center; margin: 3px">
        <div>
            <label for="file-upload">HEX</label>
            <input id="file-upload" type="file" accept=".hex" onChange={(event: any) => this.handleUpload(event)}>
        </div>
        <button onClick={() => this.handleDownload()}>Download</button>
      </div>
      <div id="tec1">
        {  this.classic ?
            <KeypadClassic onClick={(event: any) => this.handleButton(event)}></KeypadClassic> :
            <KeypadModern onClick={(event: any) => this.handleButton(event)}></KeypadModern>
        }
        <KeyButton
            code={'Escape'}
            text={'R'}
            color={'#cd3d45'}
            left={349}
            top={301}
            onClick={(event: any) => this.handleButton(event)}>
        </KeyButton>

        <KeyButton
            code={'ShiftLock'}
            text={'SH'}
            color={ shiftLocked ? '#d8696f' : '#cd3d45'}
            left={386}
            top={333}
            onClick={(event: any) => this.handleButton(event)}>
        </KeyButton>

        <DigitPane id="digit-pane">
            <div id="seven" is="seven-seg-display" digits={digits} segments={segments} display={display}></div>
        </DigitPane>
      </div>
      <div style="display:flex; justify-content:space-between; align-items: center; margin: 3px">
        <div>
            <label for="rom-select">ROM</label>
            <select id="rom-select" onChange={(event: any) => this.handleChangeROM(event.target.value)}>
                <option>MON-1</option>
                <option>MON-1A</option>
                <option>MON-1B</option>
                <option>MON-2</option>
                <option>JMON</option>
            </select>
        </div>
        <div>
            <input
                id="key-layout"
                type="checkbox"
                checked={this.classic}
                onChange={(event: any) => {
                    this.classic = event.target.checked;
                    localStorage.setItem('classic', String(this.classic))
                }}
                >
            <label for="key-layout">original key layout</label>
        </div>
        <div>
            <label for="speed">Speed</label>
            Speed
            <input
                id="speed"
                type="range"
                min="0"
                max="99"
                value={this.speed || "50"}
                onChange={(event: any) => {
                    this.speed = event.target.value;
                    localStorage.setItem('speed', String(this.speed))
                    this.worker.postMessage({ type: 'SET_SPEED', value: this.speed });
                    this.postSpeed(this.speed);
                }}
                >
        </div>
      </div>
      <p>MON 1 Restart:</p>
      <div style="display:flex; justify-content:space-between">
        <div>
            <div>CF (RST 1)	INVADERS</div>
            <div>D7 (RST 2)	NIM</div>
            <div>DF (RST 3)	LUNALANDER</div>
        </div>
        <div>
            <div>EF (RST 5)	TUNE 1 Bealach An Doir√≠n</div>
            <div>F7 (RST 6)	TUNE 2 Biking up the Strand</div>
        </div>
      </div>
        </div>
      </ThemeProvider>
    </>
  );
}
App.displayName = 'App'
